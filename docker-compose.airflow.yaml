x-airflow-common: &airflow-common
  image: apache/airflow:2.7.2
  build:
    context: .
    dockerfile: Dockerfile.airflow
  environment: &airflow-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./apis:/opt/airflow/apis
    - ./requirements.txt:/requirements.txt
    - ./Visor:/opt/airflow/Visor
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-0}"
  depends_on:
    - postgres
    - redis
  networks:
    - airflow-minio-net

services:
  airflow-webserver:
    <<: *airflow-common
    command: >
      bash -c "
        pip install --no-cache-dir -r /requirements.txt &&
        airflow webserver
      "
    ports:
      - "8080:8080"
    networks:
      - airflow-minio-net

  airflow-scheduler:
    <<: *airflow-common
    command: >
      bash -c "
        pip install --no-cache-dir -r /requirements.txt &&
        airflow scheduler
      "
    networks:
      - airflow-minio-net

  airflow-worker:
    <<: *airflow-common
    command: >
      bash -c "
        pip install --no-cache-dir -r /requirements.txt &&
        airflow celery worker
      "
    networks:
      - airflow-minio-net

  airflow-init:
    <<: *airflow-common
    command: >
      bash -c "
        pip install --no-cache-dir -r /requirements.txt &&
        airflow db migrate &&
        airflow users create --username admin --firstname Admin --lastname User --role Admin --password admin --email admin@example.com
      "
    networks:
      - airflow-minio-net

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    networks:
      - airflow-minio-net

  redis:
    image: redis:latest
    networks:
      - airflow-minio-net

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - airflow-minio-net

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: streamlit
    entrypoint: ["/app/entrypoint.sh"]
    ports:
      - "8501:8501"
    volumes:
      - ./Visor:/opt/airflow/Visor
      - ./apis:/opt/airflow/apis
      - ./requirements.txt:/requirements.txt
      - ./entrypoint.sh:/app/entrypoint.sh
    networks:
      - airflow-minio-net
    depends_on:
      - minio




volumes:
  postgres-db-volume:
  minio-data:

networks:
  airflow-minio-net:
    external: true
